/**
 * This class is generated by jOOQ
 */
package com.instructure.db.tables;


import com.instructure.db.Keys;
import com.instructure.db.Public;
import com.instructure.db.tables.records.InstrUsrDtlsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InstrUsrDtls extends TableImpl<InstrUsrDtlsRecord> {

    private static final long serialVersionUID = 767324238;

    /**
     * The reference instance of <code>public.instr_usr_dtls</code>
     */
    public static final InstrUsrDtls INSTR_USR_DTLS = new InstrUsrDtls();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InstrUsrDtlsRecord> getRecordType() {
        return InstrUsrDtlsRecord.class;
    }

    /**
     * The column <code>public.instr_usr_dtls.user_id</code>.
     */
    public final TableField<InstrUsrDtlsRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.instr_usr_dtls.user_name</code>.
     */
    public final TableField<InstrUsrDtlsRecord, String> USER_NAME = createField("user_name", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * Create a <code>public.instr_usr_dtls</code> table reference
     */
    public InstrUsrDtls() {
        this("instr_usr_dtls", null);
    }

    /**
     * Create an aliased <code>public.instr_usr_dtls</code> table reference
     */
    public InstrUsrDtls(String alias) {
        this(alias, INSTR_USR_DTLS);
    }

    private InstrUsrDtls(String alias, Table<InstrUsrDtlsRecord> aliased) {
        this(alias, aliased, null);
    }

    private InstrUsrDtls(String alias, Table<InstrUsrDtlsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<InstrUsrDtlsRecord> getPrimaryKey() {
        return Keys.INSTR_USR_DTLS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<InstrUsrDtlsRecord>> getKeys() {
        return Arrays.<UniqueKey<InstrUsrDtlsRecord>>asList(Keys.INSTR_USR_DTLS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InstrUsrDtls as(String alias) {
        return new InstrUsrDtls(alias, this);
    }

    /**
     * Rename this table
     */
    public InstrUsrDtls rename(String name) {
        return new InstrUsrDtls(name, null);
    }
}
